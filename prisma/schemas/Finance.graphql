enum FixedCostType {
  MONTHLY
  DAILY
  YEARLY
  WEEKLY
}

type TransactionSplit {
  human: Human!
  percentage: Float
  amount: Float
  pending: Boolean
}

type Transaction {
    id: ID! @unique
    payee: String!
    amount: Float!
    date: String!
    category: String!
    splits: [TransactionSplit!]!

    location: Location

    items: [GoodOrService!]! @relation(name: "TransactionForGoodOrService")

    with: [Human!]!

    # You can attach transactions to a specific calendar event so you can see how
    # you spent in total
    event: Event
}

type FinanceGoals {
    id: ID! @unique
    name: String!
    cost: Float
    due: DateTime
}

type Account {
    id: ID! @unique
    name: String!
    balance: Float!
    transactions: [Transaction!]!
}

type FixedCost {
    id: ID! @unique
    name: String
    amount: Float
    type: FixedCostType
}

type Budget {
    id: ID! @unique
    # Amount of income the individual can spend. This number is derived
    # by subtracting their fixed costs from their income
    flexible_spending: Float @default(value: "0")
    total_fixed_cost: Float
    fixed_costs: [FixedCost!]!
}

type Overview {
    id: ID! @unique
    net_worth: Float!
    credit_score: Int
    income: Float!

    # List of person's financial goals.
    # The idea is that the user will input the name, the price, and when they
    # want to achieve this goal by. These factors will be taken into account
    # when crafting the person's budget.
    goals: [FinanceGoals!]!

    budget: Budget

    accounts: [Account!]!
}
